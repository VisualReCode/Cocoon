name: Release

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: .\main
    - name: NerdBank.GitVersioning
      uses: dotnet/nbgv@v0.3.1
      id: nbgv
      with:
        path: .\main
    - name: Build
      run: >
        dotnet build -c Release
        -p:AssemblyVersion=${{ steps.nbgv.outputs.AssemblyVersion }}
        -p:AssemblyFileVersion=${{ steps.nbgv.outputs.AssemblyFileVersion }}
        -p:AssemblyInformationalVersion=${{ steps.nbgv.outputs.AssemblyInformationalVersion }}
        --no-restore
      working-directory: .\main
    - name: ProxyTests
      run: dotnet test -c Release --no-build --verbosity normal .\test\ReCode.Cocoon.Proxy.Tests
      working-directory: .\main
    - name: LegacyTests
      run: |
        ~/.nuget/packages/xunit.runner.console/2.4.1/tools/net472/xunit.console.exe $Env:GITHUB_WORKSPACE\main\test\ReCode.Cocoon.Legacy.Tests\bin\Release\net45\ReCode.Cocoon.Legacy.Tests.dll
    - name: PackLegacy
      run: >
        dotnet pack --configuration Release --no-build
        -p:PackageVersion=${{ steps.nbgv.outputs.SimpleVersion }}${{ steps.nbgv.outputs.PrereleaseVersion }}
        --output . src\ReCode.Cocoon.Legacy\ReCode.Cocoon.Legacy.csproj
      working-directory: .\main
    - name: PackProxy
      working-directory: .\main
      run: >
        dotnet pack --configuration Release --no-build
        -p:PackageVersion=${{ steps.nbgv.outputs.SimpleVersion }}${{ steps.nbgv.outputs.PrereleaseVersion }}
        --output . src\ReCode.Cocoon.Proxy\ReCode.Cocoon.Proxy.csproj
    - name: PackProxyBlazorServer
      working-directory: .\main
      run: >
        dotnet pack --configuration Release --no-build
        -p:PackageVersion=${{ steps.nbgv.outputs.SimpleVersion }}${{ steps.nbgv.outputs.PrereleaseVersion }}
        --output . src\ReCode.Cocoon.Proxy.BlazorServer\ReCode.Cocoon.Proxy.BlazorServer.csproj
    - name: PackProxyBlazorWasm
      working-directory: .\main
      run: >
        dotnet pack --configuration Release --no-build
        -p:PackageVersion=${{ steps.nbgv.outputs.SimpleVersion }}${{ steps.nbgv.outputs.PrereleaseVersion }}
        --output . src\ReCode.Cocoon.Proxy.BlazorWasm\ReCode.Cocoon.Proxy.BlazorWasm.csproj
    - name: PackProxyBlazorWasmAuth
      working-directory: .\main
      run: >
        dotnet pack --configuration Release --no-build
        -p:PackageVersion=${{ steps.nbgv.outputs.SimpleVersion }}${{ steps.nbgv.outputs.PrereleaseVersion }}
        --output . src\ReCode.Cocoon.Proxy.BlazorWasmAuth\ReCode.Cocoon.Proxy.BlazorWasmAuth.csproj
    - name: Push
      run: dotnet nuget push *.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate
      working-directory: .\main
